/*
 * NiFi Rest API
 *
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * API version: 1.24.0
 * Contact: dev@nifi.apache.org
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package nifi

type FlowRegistryClientDto struct {
	// The registry identifier
	Id string `json:"id,omitempty"`
	// The registry name
	Name string `json:"name,omitempty"`
	// The registry description
	Description string `json:"description,omitempty"`
	Uri string `json:"uri,omitempty"`
	// The type of the controller service.
	Type_ string `json:"type,omitempty"`
	// The details of the artifact that bundled this processor type.
	Bundle *BundleDto `json:"bundle,omitempty"`
	// The properties of the controller service.
	Properties map[string]string `json:"properties,omitempty"`
	// The descriptors for the controller service properties.
	Descriptors map[string]PropertyDescriptorDto `json:"descriptors,omitempty"`
	// Set of sensitive dynamic property names
	SensitiveDynamicPropertyNames []string `json:"sensitiveDynamicPropertyNames,omitempty"`
	// Whether the reporting task supports sensitive dynamic properties.
	SupportsSensitiveDynamicProperties bool `json:"supportsSensitiveDynamicProperties,omitempty"`
	// Whether the reporting task requires elevated privileges.
	Restricted bool `json:"restricted,omitempty"`
	// Whether the reporting task has been deprecated.
	Deprecated bool `json:"deprecated,omitempty"`
	// Gets the validation errors from the reporting task. These validation errors represent the problems with the reporting task that must be resolved before it can be scheduled to run.
	ValidationErrors []string `json:"validationErrors,omitempty"`
	// Indicates whether the Processor is valid, invalid, or still in the process of validating (i.e., it is unknown whether or not the Processor is valid)
	ValidationStatus string `json:"validationStatus,omitempty"`
	// The annotation data for the repoting task. This is how the custom UI relays configuration to the reporting task.
	AnnotationData string `json:"annotationData,omitempty"`
	// Whether the underlying extension is missing.
	ExtensionMissing bool `json:"extensionMissing,omitempty"`
	// Whether the flow registry client has multiple versions available.
	MultipleVersionsAvailable bool `json:"multipleVersionsAvailable,omitempty"`
}
