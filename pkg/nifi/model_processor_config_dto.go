/*
 * Apache NiFi REST API
 *
 * REST API definition for Apache NiFi web services
 *
 * API version: 2.5.0
 * Contact: dev@nifi.apache.org
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package nifi

// The configuration details for the processor. These details will be included in a response if the verbose flag is included in a request.
type ProcessorConfigDto struct {
	// The annotation data for the processor used to relay configuration between a custom UI and the procesosr.
	AnnotationData string `json:"annotationData,omitempty"`
	// The names of all relationships that cause a flow file to be terminated if the relationship is not connected elsewhere. This property differs from the 'isAutoTerminate' property of the RelationshipDTO in that the RelationshipDTO is meant to depict the current configuration, whereas this property can be set in a DTO when updating a Processor in order to change which Relationships should be auto-terminated.
	AutoTerminatedRelationships []string `json:"autoTerminatedRelationships,omitempty"`
	// Determines whether the FlowFile should be penalized or the processor should be yielded between retries.
	BackoffMechanism string `json:"backoffMechanism,omitempty"`
	// The level at which the processor will report bulletins.
	BulletinLevel string `json:"bulletinLevel,omitempty"`
	// The comments for the processor.
	Comments string `json:"comments,omitempty"`
	// The number of tasks that should be concurrently schedule for the processor. If the processor doesn't allow parallol processing then any positive input will be ignored.
	ConcurrentlySchedulableTaskCount int32 `json:"concurrentlySchedulableTaskCount,omitempty"`
	// The URL for the processor's custom configuration UI if applicable.
	CustomUiUrl string `json:"customUiUrl,omitempty"`
	// Maps default values for concurrent tasks for each applicable scheduling strategy.
	DefaultConcurrentTasks map[string]string `json:"defaultConcurrentTasks,omitempty"`
	// Maps default values for scheduling period for each applicable scheduling strategy.
	DefaultSchedulingPeriod map[string]string `json:"defaultSchedulingPeriod,omitempty"`
	// Descriptors for the processor's properties.
	Descriptors map[string]PropertyDescriptorDto `json:"descriptors,omitempty"`
	// Indicates the node where the process will execute.
	ExecutionNode string `json:"executionNode,omitempty"`
	// Whether the processor is loss tolerant.
	LossTolerant bool `json:"lossTolerant,omitempty"`
	// Maximum amount of time to be waited during a retry period.
	MaxBackoffPeriod string `json:"maxBackoffPeriod,omitempty"`
	// The amount of time that is used when the process penalizes a flowfile.
	PenaltyDuration string `json:"penaltyDuration,omitempty"`
	// The properties for the processor. Properties whose value is not set will only contain the property name.
	Properties map[string]string `json:"properties,omitempty"`
	// All the relationships should be retried.
	RetriedRelationships []string `json:"retriedRelationships,omitempty"`
	// Overall number of retries.
	RetryCount int32 `json:"retryCount,omitempty"`
	// The run duration for the processor in milliseconds.
	RunDurationMillis int64 `json:"runDurationMillis,omitempty"`
	// The frequency with which to schedule the processor. The format of the value will depend on th value of schedulingStrategy.
	SchedulingPeriod string `json:"schedulingPeriod,omitempty"`
	// Indicates how the processor should be scheduled to run.
	SchedulingStrategy string `json:"schedulingStrategy,omitempty"`
	// Set of sensitive dynamic property names
	SensitiveDynamicPropertyNames []string `json:"sensitiveDynamicPropertyNames,omitempty"`
	// The amount of time that must elapse before this processor is scheduled again after yielding.
	YieldDuration string `json:"yieldDuration,omitempty"`
}
