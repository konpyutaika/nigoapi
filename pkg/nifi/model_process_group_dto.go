/*
 * Apache NiFi REST API
 *
 * REST API definition for Apache NiFi web services
 *
 * API version: 2.0.0
 * Contact: dev@nifi.apache.org
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package nifi

type ProcessGroupDto struct {
	// The id of the component.
	Id string `json:"id,omitempty"`
	// The ID of the corresponding component that is under version control
	VersionedComponentId string `json:"versionedComponentId,omitempty"`
	// The id of parent process group of this component if applicable.
	ParentGroupId string `json:"parentGroupId,omitempty"`
	Position *PositionDto `json:"position,omitempty"`
	// The name of the process group.
	Name string `json:"name,omitempty"`
	// The comments for the process group.
	Comments string `json:"comments,omitempty"`
	VersionControlInformation *VersionControlInformationDto `json:"versionControlInformation,omitempty"`
	ParameterContext *ParameterContextReferenceEntity `json:"parameterContext,omitempty"`
	// The FlowFile Concurrency for this Process Group.
	FlowfileConcurrency string `json:"flowfileConcurrency,omitempty"`
	// The Outbound Policy that is used for determining how FlowFiles should be transferred out of the Process Group.
	FlowfileOutboundPolicy string `json:"flowfileOutboundPolicy,omitempty"`
	// The default FlowFile Expiration for this Process Group.
	DefaultFlowFileExpiration string `json:"defaultFlowFileExpiration,omitempty"`
	// Default value used in this Process Group for the maximum number of objects that can be queued before back pressure is applied.
	DefaultBackPressureObjectThreshold int64 `json:"defaultBackPressureObjectThreshold,omitempty"`
	// Default value used in this Process Group for the maximum data size of objects that can be queued before back pressure is applied.
	DefaultBackPressureDataSizeThreshold string `json:"defaultBackPressureDataSizeThreshold,omitempty"`
	// The log file suffix for this Process Group for dedicated logging.
	LogFileSuffix string `json:"logFileSuffix,omitempty"`
	// The Execution Engine that should be used to run the flow represented by this Process Group.
	ExecutionEngine string `json:"executionEngine,omitempty"`
	// The maximum number of concurrent tasks to use when running the flow using the Stateless Engine
	MaxConcurrentTasks int32 `json:"maxConcurrentTasks,omitempty"`
	// The maximum amount of time that the flow can be run using the Stateless Engine before the flow times out
	StatelessFlowTimeout string `json:"statelessFlowTimeout,omitempty"`
	// The number of running components in this process group.
	RunningCount int32 `json:"runningCount,omitempty"`
	// The number of stopped components in the process group.
	StoppedCount int32 `json:"stoppedCount,omitempty"`
	// The number of invalid components in the process group.
	InvalidCount int32 `json:"invalidCount,omitempty"`
	// The number of disabled components in the process group.
	DisabledCount int32 `json:"disabledCount,omitempty"`
	// The number of active remote ports in the process group.
	ActiveRemotePortCount int32 `json:"activeRemotePortCount,omitempty"`
	// The number of inactive remote ports in the process group.
	InactiveRemotePortCount int32 `json:"inactiveRemotePortCount,omitempty"`
	// The number of up to date versioned process groups in the process group.
	UpToDateCount int32 `json:"upToDateCount,omitempty"`
	// The number of locally modified versioned process groups in the process group.
	LocallyModifiedCount int32 `json:"locallyModifiedCount,omitempty"`
	// The number of stale versioned process groups in the process group.
	StaleCount int32 `json:"staleCount,omitempty"`
	// The number of locally modified and stale versioned process groups in the process group.
	LocallyModifiedAndStaleCount int32 `json:"locallyModifiedAndStaleCount,omitempty"`
	// The number of versioned process groups in the process group that are unable to sync to a registry.
	SyncFailureCount int32 `json:"syncFailureCount,omitempty"`
	// The number of local input ports in the process group.
	LocalInputPortCount int32 `json:"localInputPortCount,omitempty"`
	// The number of local output ports in the process group.
	LocalOutputPortCount int32 `json:"localOutputPortCount,omitempty"`
	// The number of public input ports in the process group.
	PublicInputPortCount int32 `json:"publicInputPortCount,omitempty"`
	// The number of public output ports in the process group.
	PublicOutputPortCount int32 `json:"publicOutputPortCount,omitempty"`
	// If the Process Group is configured to run in using the Stateless Engine, represents the current state. Otherwise, will be STOPPED.
	StatelessGroupScheduledState string `json:"statelessGroupScheduledState,omitempty"`
	Contents *FlowSnippetDto `json:"contents,omitempty"`
	// The number of input ports in the process group.
	InputPortCount int32 `json:"inputPortCount,omitempty"`
	// The number of output ports in the process group.
	OutputPortCount int32 `json:"outputPortCount,omitempty"`
}
