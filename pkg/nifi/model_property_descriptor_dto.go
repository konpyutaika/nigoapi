/*
 * Apache NiFi REST API
 *
 * REST API definition for Apache NiFi web services
 *
 * API version: 2.4.0
 * Contact: dev@nifi.apache.org
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package nifi

// The descriptors for the reporting tasks properties.
type PropertyDescriptorDto struct {
	// Allowable values for the property. If empty then the allowed values are not constrained.
	AllowableValues []AllowableValueEntity `json:"allowableValues,omitempty"`
	// The default value for the property.
	DefaultValue string `json:"defaultValue,omitempty"`
	// A list of dependencies that must be met in order for this Property to be relevant. If any of these dependencies is not met, the property described by this Property Descriptor is not relevant.
	Dependencies []PropertyDependencyDto `json:"dependencies,omitempty"`
	// The description for the property. Used to relay additional details to a user or provide a mechanism of documenting intent.
	Description string `json:"description,omitempty"`
	// The human readable name for the property.
	DisplayName string `json:"displayName,omitempty"`
	// Whether the property is dynamic (user-defined).
	Dynamic bool `json:"dynamic,omitempty"`
	// Scope of the Expression Language evaluation for the property.
	ExpressionLanguageScope string `json:"expressionLanguageScope,omitempty"`
	// If the property identifies a controller service this returns the fully qualified type.
	IdentifiesControllerService string `json:"identifiesControllerService,omitempty"`
	IdentifiesControllerServiceBundle *BundleDto `json:"identifiesControllerServiceBundle,omitempty"`
	// The name for the property.
	Name string `json:"name,omitempty"`
	// Whether the property is required.
	Required bool `json:"required,omitempty"`
	// Whether the property is sensitive and protected whenever stored or represented.
	Sensitive bool `json:"sensitive,omitempty"`
	// Whether the property supports expression language.
	SupportsEl bool `json:"supportsEl,omitempty"`
}
