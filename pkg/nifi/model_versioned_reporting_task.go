/*
 * NiFi Rest API
 *
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * API version: 1.24.0
 * Contact: dev@nifi.apache.org
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package nifi

type VersionedReportingTask struct {
	// The component's unique identifier
	Identifier string `json:"identifier,omitempty"`
	// The instance ID of an existing component that is described by this VersionedComponent, or null if this is not mapped to an instantiated component
	InstanceIdentifier string `json:"instanceIdentifier,omitempty"`
	// The component's name
	Name string `json:"name,omitempty"`
	// The user-supplied comments for the component
	Comments string `json:"comments,omitempty"`
	// The component's position on the graph
	Position *Position `json:"position,omitempty"`
	// The type of the extension component
	Type_ string `json:"type,omitempty"`
	// Information about the bundle from which the component came
	Bundle *Bundle `json:"bundle,omitempty"`
	// The properties for the component. Properties whose value is not set will only contain the property name.
	Properties map[string]string `json:"properties,omitempty"`
	// The property descriptors for the component.
	PropertyDescriptors map[string]VersionedPropertyDescriptor `json:"propertyDescriptors,omitempty"`
	// The annotation for the reporting task. This is how the custom UI relays configuration to the reporting task.
	AnnotationData string `json:"annotationData,omitempty"`
	// Indicates the scheduled state for the Reporting Task
	ScheduledState string `json:"scheduledState,omitempty"`
	// The frequency with which to schedule the reporting task. The format of the value will depend on the value of schedulingStrategy.
	SchedulingPeriod string `json:"schedulingPeriod,omitempty"`
	// Indicates scheduling strategy that should dictate how the reporting task is triggered.
	SchedulingStrategy string `json:"schedulingStrategy,omitempty"`
	ComponentType string `json:"componentType,omitempty"`
	// The ID of the Process Group that this component belongs to
	GroupIdentifier string `json:"groupIdentifier,omitempty"`
}
