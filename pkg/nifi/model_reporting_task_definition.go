/*
 * NiFi Rest API
 *
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * API version: 1.17.0
 * Contact: dev@nifi.apache.org
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package nifi

type ReportingTaskDefinition struct {
	// The group name of the bundle that provides the referenced type.
	Group string `json:"group,omitempty"`
	// The artifact name of the bundle that provides the referenced type.
	Artifact string `json:"artifact,omitempty"`
	// The version of the bundle that provides the referenced type.
	Version string `json:"version,omitempty"`
	// The fully-qualified class type
	Type_ string `json:"type"`
	// The description of the type.
	TypeDescription string `json:"typeDescription,omitempty"`
	// The build metadata for this component
	BuildInfo *BuildInfo `json:"buildInfo,omitempty"`
	// If this type represents a provider for an interface, this lists the APIs it implements
	ProvidedApiImplementations []DefinedType `json:"providedApiImplementations,omitempty"`
	// The tags associated with this type
	Tags []string `json:"tags,omitempty"`
	// Whether or not the component has been deprecated
	Deprecated bool `json:"deprecated,omitempty"`
	// If this component has been deprecated, this optional field can be used to provide an explanation
	DeprecationReason string `json:"deprecationReason,omitempty"`
	// Whether or not the component has a general restriction
	Restricted bool `json:"restricted,omitempty"`
	// An optional description of the general restriction
	RestrictedExplanation string `json:"restrictedExplanation,omitempty"`
	// Explicit restrictions that indicate a require permission to use the component
	ExplicitRestrictions []Restriction `json:"explicitRestrictions,omitempty"`
	// Descriptions of configuration properties applicable to this component.
	PropertyDescriptors map[string]PropertyDescriptor `json:"propertyDescriptors,omitempty"`
	// Whether or not this component makes use of dynamic (user-set) properties.
	SupportsDynamicProperties bool `json:"supportsDynamicProperties,omitempty"`
	// The supported scheduling strategies, such as TIME_DRIVER or CRON.
	SupportedSchedulingStrategies []string `json:"supportedSchedulingStrategies,omitempty"`
	// The default scheduling strategy for the reporting task.
	DefaultSchedulingStrategy string `json:"defaultSchedulingStrategy,omitempty"`
	// The default scheduling period for each scheduling strategy. The scheduling period is expected to be a time period, such as \"30 sec\".
	DefaultSchedulingPeriodBySchedulingStrategy map[string]string `json:"defaultSchedulingPeriodBySchedulingStrategy,omitempty"`
}
