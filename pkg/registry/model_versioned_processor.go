/*
 * Apache NiFi Registry REST API
 *
 * REST API definition for Apache NiFi Registry web services
 *
 * API version: 2.3.0
 * Contact: dev@nifi.apache.org
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package registry

// The Processors
type VersionedProcessor struct {
	// The annotation data for the processor used to relay configuration between a custom UI and the procesosr.
	AnnotationData string `json:"annotationData,omitempty"`
	// The names of all relationships that cause a flow file to be terminated if the relationship is not connected elsewhere. This property differs from the 'isAutoTerminate' property of the RelationshipDTO in that the RelationshipDTO is meant to depict the current configuration, whereas this property can be set in a DTO when updating a Processor in order to change which Relationships should be auto-terminated.
	AutoTerminatedRelationships []string `json:"autoTerminatedRelationships,omitempty"`
	// Determines whether the FlowFile should be penalized or the processor should be yielded between retries.
	BackoffMechanism string `json:"backoffMechanism,omitempty"`
	// The level at which the processor will report bulletins.
	BulletinLevel string `json:"bulletinLevel,omitempty"`
	Bundle *Bundle `json:"bundle,omitempty"`
	// The user-supplied comments for the component
	Comments string `json:"comments,omitempty"`
	ComponentType string `json:"componentType,omitempty"`
	// The number of tasks that should be concurrently schedule for the processor. If the processor doesn't allow parallol processing then any positive input will be ignored.
	ConcurrentlySchedulableTaskCount int32 `json:"concurrentlySchedulableTaskCount,omitempty"`
	// Indicates the node where the process will execute.
	ExecutionNode string `json:"executionNode,omitempty"`
	// The ID of the Process Group that this component belongs to
	GroupIdentifier string `json:"groupIdentifier,omitempty"`
	// The component's unique identifier
	Identifier string `json:"identifier,omitempty"`
	// The instance ID of an existing component that is described by this VersionedComponent, or null if this is not mapped to an instantiated component
	InstanceIdentifier string `json:"instanceIdentifier,omitempty"`
	// Maximum amount of time to be waited during a retry period.
	MaxBackoffPeriod string `json:"maxBackoffPeriod,omitempty"`
	// The component's name
	Name string `json:"name,omitempty"`
	// The amout of time that is used when the process penalizes a flowfile.
	PenaltyDuration string `json:"penaltyDuration,omitempty"`
	Position *Position `json:"position,omitempty"`
	// The properties for the component. Properties whose value is not set will only contain the property name.
	Properties map[string]string `json:"properties,omitempty"`
	// The property descriptors for the component.
	PropertyDescriptors map[string]VersionedPropertyDescriptor `json:"propertyDescriptors,omitempty"`
	// All the relationships should be retried.
	RetriedRelationships []string `json:"retriedRelationships,omitempty"`
	// Overall number of retries.
	RetryCount int32 `json:"retryCount,omitempty"`
	// The run duration for the processor in milliseconds.
	RunDurationMillis int64 `json:"runDurationMillis,omitempty"`
	// The scheduled state of the component
	ScheduledState string `json:"scheduledState,omitempty"`
	// The frequency with which to schedule the processor. The format of the value will depend on th value of schedulingStrategy.
	SchedulingPeriod string `json:"schedulingPeriod,omitempty"`
	// Indicates how the processor should be scheduled to run.
	SchedulingStrategy string `json:"schedulingStrategy,omitempty"`
	// Stylistic data for rendering in a UI
	Style map[string]string `json:"style,omitempty"`
	// The type of the extension component
	Type_ string `json:"type,omitempty"`
	// The amount of time that must elapse before this processor is scheduled again after yielding.
	YieldDuration string `json:"yieldDuration,omitempty"`
}
