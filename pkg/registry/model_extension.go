/*
 * Apache NiFi Registry REST API
 *
 * The REST API provides an interface to a registry with operations for saving, versioning, reading NiFi flows and components.
 *
 * API version: 1.24.0
 * Contact: dev@nifi.apache.org
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package registry

type Extension struct {
	// The name of the extension
	Name string `json:"name,omitempty"`
	// The type of the extension
	Type_ string `json:"type,omitempty"`
	// The deprecation notice of the extension
	DeprecationNotice *DeprecationNotice `json:"deprecationNotice,omitempty"`
	// The description of the extension
	Description string `json:"description,omitempty"`
	// The tags of the extension
	Tags []string `json:"tags,omitempty"`
	// The properties of the extension
	Properties []Property `json:"properties,omitempty"`
	SupportsSensitiveDynamicProperties bool `json:"supportsSensitiveDynamicProperties,omitempty"`
	// The dynamic properties of the extension
	DynamicProperties []DynamicProperty `json:"dynamicProperties,omitempty"`
	// The relationships of the extension
	Relationships []Relationship `json:"relationships,omitempty"`
	// The dynamic relationships of the extension
	DynamicRelationship *DynamicRelationship `json:"dynamicRelationship,omitempty"`
	// The attributes read from flow files by the extension
	ReadsAttributes []Attribute `json:"readsAttributes,omitempty"`
	// The attributes written to flow files by the extension
	WritesAttributes []Attribute `json:"writesAttributes,omitempty"`
	// The information about how the extension stores state
	Stateful *Stateful `json:"stateful,omitempty"`
	// The restrictions of the extension
	Restricted *Restricted `json:"restricted,omitempty"`
	// The input requirement of the extension
	InputRequirement string `json:"inputRequirement,omitempty"`
	// The resource considerations of the extension
	SystemResourceConsiderations []SystemResourceConsideration `json:"systemResourceConsiderations,omitempty"`
	// The names of other extensions to see
	SeeAlso []string `json:"seeAlso,omitempty"`
	// The service APIs provided by this extension
	ProvidedServiceAPIs []ProvidedServiceApi `json:"providedServiceAPIs,omitempty"`
	// The default settings for a processor
	DefaultSettings *DefaultSettings `json:"defaultSettings,omitempty"`
	// The default schedule for a processor reporting task
	DefaultSchedule *DefaultSchedule `json:"defaultSchedule,omitempty"`
	// Indicates that a processor should be triggered serially
	TriggerSerially bool `json:"triggerSerially,omitempty"`
	// Indicates that a processor should be triggered when the incoming queues are empty
	TriggerWhenEmpty bool `json:"triggerWhenEmpty,omitempty"`
	// Indicates that a processor should be triggered when any destinations have space for flow files
	TriggerWhenAnyDestinationAvailable bool `json:"triggerWhenAnyDestinationAvailable,omitempty"`
	// Indicates that a processor supports batching
	SupportsBatching bool `json:"supportsBatching,omitempty"`
	// Indicates that a processor supports event driven scheduling
	EventDriven bool `json:"eventDriven,omitempty"`
	// Indicates that a processor should be scheduled only on the primary node
	PrimaryNodeOnly bool `json:"primaryNodeOnly,omitempty"`
	// Indicates that a processor is side effect free
	SideEffectFree bool `json:"sideEffectFree,omitempty"`
}
